menu "NodeMCU miscellaneous"

choice NODEMCU_TASK_AFFINITY
  depends on !FREERTOS_UNICORE
  prompt "Lua VM core affinity"
  default NODEMCU_TASK_AFFINITY_CORE1
  help
    Select the core to run the Lua VM on. In theory the Lua VM task could
    be allowed to be scheduled on either core, but in practice this does
    not work well. Experience has shown that it easily breaks gpio triggers,
    and it likely also breaks other things that rely on interrupt service
    routines, as these are installed and bound per-core.

config NODEMCU_TASK_AFFINITY_CORE0
  bool "Core 0 (PRO cpu)"
config NODEMCU_TASK_AFFINITY_CORE1
  bool "Core 1 (APP cpu)"

endchoice

choice LUA_OPTIMIZE_DEBUG_LEVEL
  prompt "Discard debug info in compiled Lua"
  default LUA_OPTIMIZE_DEBUG_NONE
  help
      Discard debug information in compiled Lua code to save memory.

config LUA_OPTIMIZE_DEBUG_NONE
  bool "No (keep full debug info)"
config LUA_OPTIMIZE_DEBUG_LOCAL_UPVAL
  bool "Some (discard local & upvalue debug info)"
config LUA_OPTIMIZE_DEBUG_LOCAL_UPVAL_LINENO
  bool "All (discard local, upvalue & line number info)"
endchoice

config LUA_OPTIMIZE_DEBUG
  int
  default 1 if LUA_OPTIMIZE_DEBUG_NONE
  default 2 if LUA_OPTIMIZE_DEBUG_LOCAL_UPVAL
  default 3 if LUA_OPTIMIZE_DEBUG_LOCAL_UPVAL_LINENO

endmenu
